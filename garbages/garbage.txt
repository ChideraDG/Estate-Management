

Media================================================

    /* @media (min-width: 768px) and (max-width: 991.98px) {
        .container {
            max-width: 90%;
            height: 650px; /* Adjusted height for this breakpoint */
        /* }
        .registration-form h2 {
            font-size: 45px;
        }
        .form-group label {
            font-size: 19px;
        }
        .form-group input,
        .choice-field {
            font-size: 19px;
        }
        .registration-form button {
            font-size: 25px;
        }
    } */

    /* @media (min-width: 992px) and (max-width: 1199.98px) {
        .container {
            max-width: 80%;
            height: 700px; /* Adjusted height for this breakpoint */
        /* }
        .registration-form h2 {
            font-size: 48px;
        }
        .form-group label {
            font-size: 20px;
        }
        .form-group input,
        .choice-field {
            font-size: 20px;
        }
        .registration-form button {
            font-size: 26px;
        }
    } */

    @media (min-width: 1200px) {
        .container {
            max-width: 70%;
            height: 750px; Adjusted height for this breakpoint
        }
        .registration-form h2 {
            font-size: 50px;
        }
        .form-group label {
            font-size: 22px;
        }
        .form-group input,
        .choice-field {
            font-size: 22px;
        }
        .registration-form button {
            font-size: 27px;
        }
    } */
=======================================


Many to many================================================
# Now add many-to-many relationships after saving the instance
amenities_ids = request.POST.getlist('amenities')  # Get the list of selected amenities' IDs
amenities = Amenity.objects.filter(id__in=amenities_ids)  # Query the selected amenities

for amenity in amenities:  # Iterate through the selected amenities
    instance.amenities.add(amenity)  # Add each amenity to the instance
============================================================

For making a folder work onn gitignore==========================
git rm -r --cached media/
=============================================


for deleting all migrations======================================
find . -path "*/migrations/*.py" -not -name "__init__.py" -delete
find . -path "*/migrations/*.pyc"  -delete
======================================================

# Fix the dashboard url path


old Building Owner frontend========================================

    <style>
        .containers {
            display: flex;
            width: 100%;
        }

        .left-side {
            width: 20%;
            padding-right: 10px;
        }

        .vertical-line {
            width: 5px;
            background-color: #2ed162;
            margin: 0 20px;
        }

        .right-side {
            width: 80%;
            padding-left: 10px;
            border-left: 1px solid #ddd; /* Optional border to define the content area */
        }

        h6 {
            cursor: pointer;
            background-color: #f1f1f1;
            padding: 20px;
            margin: 0;
            border: 1px solid #ddd;
        }

        .mylist {
            list-style: none;
            margin: 0;
            padding: 0;
            display: none; /* Hide the dropdown content by default */
        }

        .mylist li {
            padding: 10px;
            border: 1px solid #ddd;
            border-top: none; /* Remove the top border to make it look like a continuation */
            background-color: #fafafa;
        }

        .mylist li a {
            text-decoration: none;
            color: #333;
            display: block;
        }

        .mylist li a:hover {
            background-color: #e0e0e0;
        }

        .content {
            display: none; /* Hide content by default */
        }

        .content.active {
            display: block; /* Show the active content */
        }
    </style>

    <div class="containers">
        
        <div class="left-side">
            <h6>Overview Section</h6>
            <ul class="mylist">
                <li><a href='{% url "prop-summ" %}'  data-content="personal-info">Property Summary</a></li>
                <li><a href="#" data-content="lease-info">Tenant Overview</a></li>
                <li><a href="#" data-content="payment-history">Financial Snapshot</a></li>
            </ul>
            
            <h6>House Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="house-profiles">House Profiles</a></li>
                <li><a href="#" data-content="house-reports">House Reports</a></li>
            </ul>
    
            <h6>Tenant Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="tp">Tenant Profiles</a></li>
                <li><a href="#" data-content="lease-management">Lease Management</a></li>
                <li><a href="#" data-content="communication-tools">Communication Tools</a></li>
            </ul>
    
            <h6>Financial Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="rent-collection">Rent Collection</a></li>
                <li><a href="#" data-content="expense-tracking">Expense Tracking</a></li>
                <li><a href="#" data-content="financial-reports">Financial Reports</a></li>
            </ul>
            
            <h6>Maintenance Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="maintenance-requests">Maintenance Requests</a></li>
                <li><a href="#" data-content="service-schedule">Service Schedule</a></li>
                <li><a href="#" data-content="service-provider-management">Service Provider Management</a></li>
            </ul>
    
            <h6>Document Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="document-storage">Document Storage</a></li>
                <li><a href="#" data-content="document-sharing">Document Sharing</a></li>
            </ul>
    
            <h6>Analytics and Reporting</h6>
            <ul class="mylist">
                <li><a href="#" data-content="real-time-analytics">Real-time Analytics</a></li>
                <li><a href="#" data-content="custom-reports">Custom Reports</a></li>
                <li><a href="#" data-content="forecasting-tools">Forecasting Tools</a></li>
            </ul>
    
            <h6>User Management</h6>
            <ul class="mylist">
                <li><a href="#" data-content="activity">Activity Logs</a></li>
            </ul>

            <h6>Profile</h6>
            <ul class="mylist">
                <li><a href='{% url "view-building-owner" pk=request.user.profile %}' data-content="bo-profile">Building Owner Profile</a></li>
                <li><a href='{% url "view-user-profile" pk=request.user.profile.username %}' data-content="personal-profile">Personal Profile</a></li>
            </ul>
        </div>
    
        <div class="vertical-line"></div>
    
        <div class="right-side">
            {% block details %}{% endblock details %}
        </div>
    </div>    

    <script>
            // JavaScript to toggle the visibility of the dropdown content
            document.querySelectorAll('h6').forEach(header => {
                header.addEventListener('click', () => {
                    const ul = header.nextElementSibling;
                    ul.style.display = ul.style.display === 'block' ? 'none' : 'block';
                });
            });

            
    </script>
===================================================================



alert bootstrap ========================================================
    /* Basic alert styling */
    .alert {
    position: relative;
    padding: 1rem 1rem;
    margin-bottom: 1rem;
    border: 1px solid transparent;
    border-radius: .375rem;
    }

    /* Alert variations based on type */
    .alert-primary {
    color: #084298;
    background-color: #cfe2ff;
    border-color: #b6d4fe;
    }

    .alert-secondary {
    color: #41464b;
    background-color: #e2e3e5;
    border-color: #d3d6d8;
    }

    .alert-success {
    color: #0f5132;
    background-color: #d1e7dd;
    border-color: #badbcc;
    }

    .alert-danger {
    color: #842029;
    background-color: #f8d7da;
    border-color: #f5c2c7;
    }

    .alert-warning {
    color: #664d03;
    background-color: #fff3cd;
    border-color: #ffecb5;
    }

    .alert-info {
    color: #055160;
    background-color: #cff4fc;
    border-color: #b6effb;
    }

    .alert-light {
    color: #636464;
    background-color: #fefefe;
    border-color: #fdfdfe;
    }

    .alert-dark {
    color: #141619;
    background-color: #d3d3d4;
    border-color: #bcbebf;
    }
=========================================

old view Building Owner html=========================================
    <style>
        .profile-container {
            max-width: 800px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            font-family: Arial, sans-serif;
        }

        /* Profile Image Styling */
        .profile-image {
            text-align: left;
            margin-bottom: 20px;
        }

        .profile-image img {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 2px solid #ddd;
        }

        /* Profile Details Styling */
        .profile-details {
            margin-bottom: 20px;
        }

        .profile-details p {
            font-size: 16px;
            line-height: 1.6;
            margin: 10px 0;
        }

        .profile-details strong {
            color: #333;
        }

        /* Social Links Styling */
        .social-links {
            margin-bottom: 20px;
        }

        .social-links h3 {
            font-size: 18px;
            margin-bottom: 10px;
            color: #555;
        }

        .social-links ul {
            list-style-type: none;
            padding: 0;
        }

        .social-links ul li {
            display: inline-block;
            margin-right: 15px;
        }

        .social-links ul li a {
            text-decoration: none;
            color: #007bff;
            transition: color 0.3s ease;
        }

        .social-links ul li a:hover {
            color: #0056b3;
        }

        /* Timestamps Styling */
        .timestamps p {
            font-size: 14px;
            color: #888;
            margin: 5px 0;
        }

        /* General Styling */
        h2 {
            font-size: 24px;
            margin-bottom: 15px;
            color: #333;
        }

        h3 {
            font-size: 18px;
            margin-bottom: 10px;
            color: #555;
        }

        .profile-actions {
            margin-top: 10px;
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            color: white;
            text-align: center;
        }

        .btn-primary {
            background-color: #007bff;
        }

        .btn-danger {
            background-color: #dc3545;
        }
    </style>

    <div class="profile-container">
        <div style="display: flex; align-items: center; justify-content: space-between;">
            <div class="profile-image">
                <img src="{{ profile.profile_pics.url }}" alt="{{ profile.building_owner_name }}">
            </div>

            <div class="profile-actions" style="display: flex; gap: 10px;">
                <a href='{% url "update-building-owner" pk=profile.user %}' class="btn btn-primary">Update Profile</a>
            </div>
        </div>

        <div class="card profile-details" style="width: 100%; max-width: 600px;">
            <div class="card-body">
                <h5 class="card-title" style="color: #2ed162;">Profile Details</h5>
                <ul class="list-unstyled">
                    <li class="mb-2"><strong>Building Owner Name:</strong> {{ profile.building_owner_name }}</li>
                    <li class="mb-2"><strong>Contact Email:</strong> {{ profile.contact_email }}</li>
                    <li class="mb-2"><strong>Contact Phone:</strong> {{ profile.contact_phone }}</li>
                    <li class="mb-2"><strong>Address:</strong> {{ profile.address }}</li>
                    <li class="mb-2"><strong>Country:</strong> {{ profile.country }}</li>
                    <li class="mb-2"><strong>State:</strong> {{ profile.state }}</li>
                    <li class="mb-2"><strong>City:</strong> {{ profile.city }}</li>
                    <li class="mb-2"><strong>Portfolio Size:</strong> {{ profile.portfolio_size }}</li>
                    <li class="mb-2"><strong>Private:</strong> {{ profile.is_visible }}</li>
                    <li class="mb-2"><strong>Investment Strategy:</strong> {{ profile.investment_strategy.title }}</li>
                    <li class="mb-2"><strong>TaxID:</strong> {{ profile.tax_id }}</li>
                    <li class="mb-2"><strong>Notes:</strong> {{ profile.notes }}</li>
                </ul>
            </div>
        </div>

        <div class="timestamps">
            <p><strong>Profile Created:</strong> {{ profile.created|date:"F j, Y, g:i a" }}</p>
            <p><strong>Last Updated:</strong> {{ profile.updated|date:"F j, Y, g:i a" }}</p>
        </div>
    </div>
==================================================================================

upload new photos==================================================
    <div class="button-wrapper">
        <label for="upload" class="btn btn-primary me-2 mb-4" tabindex="0">
            <span class="d-none d-sm-block">Upload new photo</span>
            <i class="bx bx-upload d-block d-sm-none"></i>
            {{ form.profile_pics }} <!-- This will render the input field with the specified attributes -->
        </label>
        <button type="button" class="btn btn-outline-secondary account-image-reset mb-4">
            <i class="bx bx-reset d-block d-sm-none"></i>
            <span class="d-none d-sm-block">Reset</span>
        </button>

        <p class="text-muted mb-0">Allowed JPG, GIF or PNG. Max size of 800K</p>
    </div>
==================================================================================

old update building_owner=====================================================================
{% extends "building_owners/BO_dashboard.html" %}

{% block details %}
    <!-- Content -->
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">User Management / Building Owner Profile /</span>  Update</h4>

    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-pills flex-column flex-md-row mb-3">
                <li class="nav-item">
                    <a class="nav-link active" href="javascript:void(0);">
                        <i class="bi bi-person-fill me-1"></i> Building Owner Profile
                    </a>
                </li>
            </ul>
            
            <div class="card mb-4">
                <h5 class="card-header">Profile Details</h5>
                <!-- Account -->
                <div class="card-body">
                    <div class="d-flex align-items-start align-items-sm-center gap-4">
                        <img src="{{ profile.profile_pics.url }}" alt="user-avatar" class="d-block rounded"
                        height="100"
                        width="100"
                        id="uploadedAvatar"
                        />
                    </div>
                </div>

                <hr class="my-0" />

                <div class="card-body">
                    <form method="POST" enctype="multipart/form-data" action="">
                        {% csrf_token %}
                        <div class="row">
                            {% for field in form  %}
                            <div class="mb-3 col-md-6">
                                <label class="form-label">{{field.label}}</label>
                                {{ field }}
                            </div>
                            {% endfor %}
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Contact Email</label>
                                {{ form.contact_email }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Contact Phone</label>
                                {{ form.contact_phone }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Address</label>
                                {{ form.address }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Country</label>
                                {{ form.country }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">State</label>
                                {{ form.state }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">City</label>
                                {{ form.city }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Private Account</label>
                                {{ form.is_visible }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Investment Strategy</label>
                                {{ form.investment_strategy }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Tax ID</label>
                                {{ form.tax_id }}
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label">Notes</label>
                                {{ form.notes }}
                            </div>
                        </div>
                        <div class="mt-2">
                            <button type="submit" class="btn btn-primary me-2">Save changes</button>
                            <a href='{% url "view-building-owner" pk=request.user.profile %}'><button type="button" class="btn btn-outline-secondary">Cancel</button></a>
                        </div>
                    </form>
                </div>
                <!-- /Account -->
            </div>
        </div>
    </div>
    <!-- / Content -->

    <script>
        $(document).ready(function() {
        $('#id_country').change(function() {
            var countryId = $(this).val();
            if (countryId) {
                $.ajax({
                    url: "{% url 'get-states' %}",
                    data: {
                        'country_id': countryId
                    },
                    success: function(data) {
                        var options = '<option value="">Select a state</option>';
                        for (var i = 0; i < data.length; i++) {
                            options += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                        }
                        $('#id_state').html(options);
                    }
                });
            } else {
                $('#id_state').empty();
                }
            });
        });
    </script>
{% endblock details %}
=====================================================================

for increasing Git postBuffer size===================================
    git config http.postBuffer 524288000
=====================================================================

old estate view =============================================
    estates, query_string = FilterEstates(request)
    total_estates = estates.count

    # Get the current menu or default to 'all' if not provided.
    i_menu = request.GET.get('i_menu', 'all')
    add = request.GET.get('add', 'all')

    # Get the reset filter URL or default to '/' if not provided.
    reset_filter = request.GET.get('reset_filter', '/')

    # Set the active menu and sub-menu for UI highlighting.
    menu = 'estates-management'
    s_menu = 'estate-profiles'

    # Retrieve all countries (presumably for filtering options).
    countries = Country.objects.all()

    # Filter estates by their types
    residential_estates = estates.filter(estate_type="residential")
    commercial_estates = estates.filter(estate_type="commercial")
    mixed_use_estates = estates.filter(estate_type="mixed_use ")

    # Check if exists
    exist = [estates.exists(), residential_estates.exists(), commercial_estates.exists(), mixed_use_estates.exists()] 

     # Paginate the estaes showing 6 estates per page.
    custom_range, estates = paginateEstates(request, estates, 6)
    re_custom_range, residential_estates = paginateEstates(request, residential_estates, 6)
    co_custom_range, commercial_estates = paginateEstates(request, commercial_estates, 6)
    mu_custom_range, mixed_use_estates = paginateEstates(request, mixed_use_estates, 6)

    # If the request method is POST, process the form for adding a new estate.
    if request.method == "POST":
        form = EstateForm(request.POST)

         # Get the list of images uploaded with the form.
        images = request.FILES.getlist('images')

        # Check if the form is valid.
        if form.is_valid():
            # Create a model instance from the form but don't save it yet.
            instance = form.save(commit=False)

            if request.user.profile.designation == 'company':
                instance.name = profile

            # Save the house instance to the database.
            instance.save()

            # Access the Many-to-Many Table for utilities and save selected utilities.
            EstateUtilities = Estate.utilities.through
            for utility in request.POST.getlist('utilities'):
               EstateUtilities.objects.create(estate_id=instance.id, utility_id=utility)

             # Access the Many-to-Many Table for amenities and save selected amenities.
            EstateAmenities = Estate.amenities.through
            for amenity in request.POST.getlist('amenities'):
                EstateAmenities.objects.create(estate_id=instance.id, amenity_id=amenity)

             # Access the Many-to-Many Table for utilities and save selected security features.
            EstateSecurityFeatures = Estate.security_features.through
            for security_feature in request.POST.getlist('security_features'):
               EstateSecurityFeatures.objects.create(estate_id=instance.id, security_feature_id=security_feature)

             # Save each uploaded image to the Photo model with the associated house.
            for image in images:
                Photo.objects.create(
                    image=image,
                    estate=instance,
                    description=f'{instance}'
                )
            
            # Redirect to the same view after successful form submission.
            return redirect('estates', pk=request.user.profile, type=type )
        else:
            non_field_errors = form.non_field_errors()
            if non_field_errors:
                for error in non_field_errors:
                    messages.error(request, error)

    # If the request method is GET, instantiate an empty HouseForm.
    else:
        form = EstateForm()

    # Prepare the context to be passed to the template.
    context = {
        's_menu': s_menu,
        'menu': menu,
        'profile': profile,
        'estates': estates,
        'countries': countries,
        'form': form,
        'exist': exist,
        'reset_filter': reset_filter,
        'query_string': query_string,
        'type': type,
        'residential_estates': residential_estates,
        'commercial_estates': commercial_estates,
        'mixed_use_estates': mixed_use_estates,
        'custom_range': custom_range,
        're_custom_range': re_custom_range,
        'co_custom_range': co_custom_range,
        'mu_custom_range': mu_custom_range,
        'i_menu': i_menu,
        'filter_form': EstateFilterForm(),
        'total_estates': total_estates,
        'add': add,
        }
=================================================