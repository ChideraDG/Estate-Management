# Generated by Django 5.0.3 on 2024-08-13 09:29

import django.core.validators
import django.db.models.deletion
import tenants.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("apartments", "0001_initial"),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=100)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?[0-9]{3} ?[0-9-]{8,11}$",
                                message="Phone number must be entered in the format: '08012345678' or '+2348012345678'. Up to 15 digits allowed.",
                            )
                        ],
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="tenants-profile-pics/",
                        validators=[tenants.models.validate_image_size],
                    ),
                ),
                ("move_in_date", models.DateField(blank=True, null=True)),
                ("lease_start_date", models.DateField(blank=True, null=True)),
                ("lease_end_date", models.DateField(blank=True, null=True)),
                (
                    "monthly_rent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "lease_term",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("yearly", "Yearly"),
                            ("six_monthly", "Six Monthly"),
                            ("month_to_month", "Month to Month"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[("paid", "Paid"), ("overdue", "Overdue")],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "emergency_contact_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?[0-9]{3} ?[0-9-]{8,11}$",
                                message="Phone number must be entered in the format: '08012345678' or '+2348012345678'. Up to 15 digits allowed.",
                            )
                        ],
                    ),
                ),
                (
                    "employment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("employed", "Employed"),
                            ("unemployed", "Unemployed"),
                            ("self_employed", "Self Employed"),
                            ("student", "Student"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("occupation", models.CharField(blank=True, max_length=50, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "apartment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tenants",
                        to="apartments.apartment",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tenant",
                        to="locations.country",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tenant",
                        to="locations.state",
                    ),
                ),
            ],
        ),
    ]
